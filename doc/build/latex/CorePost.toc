\select@language {english}
\contentsline {chapter}{\numberline {1}A Twisted REST micro-framework}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}Introduction}{1}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}What is CorePost?}{1}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}What is Twisted?}{1}{subsection.1.1.2}
\contentsline {subsection}{\numberline {1.1.3}What does CorePost add on top of Twisted Web?}{1}{subsection.1.1.3}
\contentsline {subsection}{\numberline {1.1.4}Why would I use CorePost instead of Node.js?}{2}{subsection.1.1.4}
\contentsline {chapter}{\numberline {2}Features}{3}{chapter.2}
\contentsline {section}{\numberline {2.1}URL Routing}{3}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}@route decorator}{3}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Path argument extraction}{4}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Routing requests by incoming content type}{4}{subsection.2.1.3}
\contentsline {section}{\numberline {2.2}Argument validation}{4}{section.2.2}
\contentsline {section}{\numberline {2.3}Content types}{5}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}Parsing of incoming content}{5}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}Converting Python objects to expected content type}{5}{subsection.2.3.2}
\contentsline {section}{\numberline {2.4}Filters}{6}{section.2.4}
\contentsline {section}{\numberline {2.5}HTTP codes}{7}{section.2.5}
\contentsline {section}{\numberline {2.6}Asynchronous Operations}{7}{section.2.6}
\contentsline {subsection}{\numberline {2.6.1}@defer.inlineCallbacks support}{7}{subsection.2.6.1}
\contentsline {section}{\numberline {2.7}Modular REST applications}{7}{section.2.7}
